// <auto-generated />
using Database.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230201012432_INITIAL")]
    partial class INITIAL
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 2,
                            Description = "",
                            Name = "Algorithm"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Description = "",
                            Name = "Data Structure"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 2,
                            Description = "",
                            Name = "OOP"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 1,
                            Description = "",
                            Name = "Circuit Analysis"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 1,
                            Description = "",
                            Name = "Load Balancing"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 1,
                            Description = "",
                            Name = "Circuit Desing"
                        });
                });

            modelBuilder.Entity("Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "EEE"
                        },
                        new
                        {
                            Id = 2,
                            Name = "CSE"
                        },
                        new
                        {
                            Id = 3,
                            Name = "ME"
                        },
                        new
                        {
                            Id = 4,
                            Name = "TE"
                        },
                        new
                        {
                            Id = 5,
                            Name = "ECE"
                        });
                });

            modelBuilder.Entity("Model.GenericLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GenericLookupTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenericLookupTypeId");

                    b.ToTable("GenericLookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenericLookupTypeId = 1,
                            Grade = "3.25"
                        },
                        new
                        {
                            Id = 2,
                            GenericLookupTypeId = 1,
                            Grade = "3.50"
                        },
                        new
                        {
                            Id = 3,
                            GenericLookupTypeId = 1,
                            Grade = "3.75"
                        },
                        new
                        {
                            Id = 4,
                            GenericLookupTypeId = 1,
                            Grade = "3.86"
                        },
                        new
                        {
                            Id = 5,
                            GenericLookupTypeId = 1,
                            Grade = "4.00"
                        });
                });

            modelBuilder.Entity("Model.GenericLookupType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GenericLookupType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ResultType"
                        });
                });

            modelBuilder.Entity("Model.StudentCourses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<int>("StudentInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentInfoId");

                    b.ToTable("StudentsCourses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            GradeId = 5,
                            StudentInfoId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            GradeId = 4,
                            StudentInfoId = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 2,
                            GradeId = 2,
                            StudentInfoId = 2
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 3,
                            GradeId = 3,
                            StudentInfoId = 2
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 4,
                            GradeId = 2,
                            StudentInfoId = 3
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 5,
                            GradeId = 5,
                            StudentInfoId = 3
                        });
                });

            modelBuilder.Entity("Model.StudentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "I01",
                            DepartmentId = 2,
                            Name = "Iron Man"
                        },
                        new
                        {
                            Id = 2,
                            Code = "H02",
                            DepartmentId = 2,
                            Name = "Hulk"
                        },
                        new
                        {
                            Id = 3,
                            Code = "T03",
                            DepartmentId = 1,
                            Name = "Thor"
                        },
                        new
                        {
                            Id = 4,
                            Code = "HM01",
                            DepartmentId = 1,
                            Name = "Hitman"
                        },
                        new
                        {
                            Id = 5,
                            Code = "B05",
                            DepartmentId = 4,
                            Name = "Black Widow"
                        });
                });

            modelBuilder.Entity("Model.Course", b =>
                {
                    b.HasOne("Model.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Model.GenericLookup", b =>
                {
                    b.HasOne("Model.GenericLookupType", "GenericLookupType")
                        .WithMany("GenericLookups")
                        .HasForeignKey("GenericLookupTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GenericLookupType");
                });

            modelBuilder.Entity("Model.StudentCourses", b =>
                {
                    b.HasOne("Model.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.StudentInfo", "StudentInfo")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentInfoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("StudentInfo");
                });

            modelBuilder.Entity("Model.StudentInfo", b =>
                {
                    b.HasOne("Model.Department", "Department")
                        .WithMany("StudentInfos")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Model.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("Model.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("StudentInfos");
                });

            modelBuilder.Entity("Model.GenericLookupType", b =>
                {
                    b.Navigation("GenericLookups");
                });

            modelBuilder.Entity("Model.StudentInfo", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
